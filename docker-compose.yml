services:

  web:
    build: .
    tty: true
    ports:
      - "127.0.0.1:80:80"
      - "127.0.0.1:443:443"
    depends_on:
      - postgres
      - redis
      - celeryworker
    env_file:
      - .env
    environment:
      GUNICORN_CMD_ARGS: --reload
    networks:
      - db
      - redis
    restart: unless-stopped
    stop_grace_period: "5s"
    volumes:
      - .:/app

  redis:
    image: redis:alpine
    networks:
      - redis

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    tty: true
    networks:
      - db
    volumes:
      - postgres:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - db
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin

  celeryworker:
    build: .
    tty: true
    entrypoint: ["flask", "celery", "worker"]
    networks:
      - redis
    env_file:
      - .env
    ports:
      - 5555:5555
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    stop_grace_period: "5s"
    volumes:
      - .:/app


networks:
  redis:
    driver: bridge
  db:
    driver: bridge


volumes:
  postgres: {}
  pgadmin: {}
