x-app: &app-config
  build: .
  depends_on:
    - postgres
    - redis
  env_file:
    - .env
  environment:
    POSTGRES_USER: postgres
    POSTGRES_HOST: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_DB: flagging
    REDIS_URL: redis://redis:6379
    FLASK_ENV: ${FLASK_ENV:-development}
    BASIC_AUTH_USERNAME: ${BASIC_AUTH_USERNAME:-development}
  networks:
    - db
    - redis
  restart: unless-stopped
  stop_grace_period: "5s"
  tty: true
  volumes:
    - .:/var/www/app

version: "3.3"
services:

  web:
    <<: *app-config
    ports:
      - 80:80
    links:
      - postgres
      - redis
      - celeryworker

  redis:
    image: redis:alpine
    networks:
      - redis

  postgres:
    image: postgres:10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flagging
    env_file:
      - .env
    tty: true
    networks:
      - db
    volumes:
      - postgres:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - db
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin

  celeryworker:
    <<: *app-config
    entrypoint: ["flask", "celery", "worker", "--uid", "nobody", "--gid", "nogroup"]
    ports:
      - 5555:5555
    depends_on:
      - redis


networks:
  redis:
    driver: bridge
  db:
    driver: bridge


volumes:
  postgres: {}
  pgadmin: {}
